(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// window.requestAnimationFrame=(function(){
// 	return window.requestAnimationFrame ||
// 			window.webkitRequestAnimationFrame ||
// 			window.mozRequestAnimationFrame ||
// 			function(callback){
// 				window.setTimeout(callback,1000/60);
// 			}
// })
var canvas = document.getElementById("main-panel");
var ctx = canvas.getContext("2d");
var screenWidth = canvas.width = window.innerWidth;
var screenHeight = canvas.height = window.innerHeight;
var lines = [];
var startLines = (function () {
    function startLines() {
        this.positionx = -200;
        this.positiony = 0;
        this.r = Math.floor(Math.random() * (Math.sqrt(screenHeight * screenHeight + screenWidth * screenWidth) - 250)) + 250;
        this.startRadio = -(Math.random() * Math.PI / 8 + Math.PI / 8);
        this.endRadio = 0;
        this.red = Math.floor(Math.random() * 155) + 100;
        this.green = Math.floor(Math.random() * 155) + 100;
        this.blue = Math.floor(Math.random() * 155) + 100;
        //opacity:number=Math.floor(Math.random()*10)/10;
        this.opacity = 1;
        this.lineWidth = Math.floor(Math.random() * 6) + 2;
        this.speed = (Math.random() * Math.PI + Math.PI) / this.r;
    }
    startLines.prototype.drawStart = function () {
        var color = "rgba(" + this.red + "," + this.green + "," + this.blue + "," + this.opacity + ")";
        ctx.beginPath();
        ctx.lineWidth = this.lineWidth;
        ctx.arc(this.positionx, this.positiony, this.r, this.startRadio, this.endRadio);
        ctx.strokeStyle = color;
        ctx.stroke();
    };
    startLines.prototype.animate = function () {
        this.startRadio += this.speed;
        this.endRadio += this.speed;
        this.drawStart();
    };
    return startLines;
}());
function recovery(arr, index) {
    var tempArr = [];
    for (var i = 0; i < arr.length; i++) {
        if (i != index) {
            tempArr.push(arr[i]);
        }
    }
    return tempArr;
}
setInterval(function () {
    var starLine = new startLines();
    lines.push(starLine);
    starLine.drawStart();
    for (var i = 0; i < lines.length; i++) {
        if (lines[i].startRadio > Math.PI) {
            lines = recovery(lines, i);
        }
    }
}, 200);
setInterval(function () {
    ctx.clearRect(0, 0, screenWidth, screenHeight);
    ctx.beginPath();
    ctx.moveTo(0, 0);
    ctx.lineTo(0, screenHeight);
    ctx.lineTo(screenWidth, screenHeight);
    ctx.lineTo(screenWidth, 0);
    ctx.strokeStyle = "#222222";
    ctx.closePath();
    ctx.fill();
    for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
        var item = lines_1[_i];
        item.animate();
    }
}, 1000 / 60);
},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
